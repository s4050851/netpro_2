/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package javawebbrowser;

import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStreamReader;
import java.net.URL;
import java.net.URLConnection;
import java.util.Enumeration;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 *
 * @author lenovo
 */
public class javawebbrowser2 extends javax.swing.JFrame {

    /**
     * Creates new form javawebbrowser2
     */
    public javawebbrowser2() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">                          
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        loadButton = new javax.swing.JButton();
        textFieldUrl_a = new javax.swing.JTextField();
        textFieldUrl_b = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        EditorPane_a = new javax.swing.JEditorPane();
        jScrollPane2 = new javax.swing.JScrollPane();
        EditorPane_b = new javax.swing.JEditorPane();
        jScrollPane3 = new javax.swing.JScrollPane();
        TextArea1 = new javax.swing.JTextArea();
        jLabel3 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Chuleepohn Yongkiatpanich s4050851@kmitl.ac.th - Java Web Browser (Network Programming Class Assignment)");

        jLabel1.setText("URL A");

        jLabel2.setText("URL B");

        loadButton.setText("GO");
        loadButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                loadButtonActionPerformed(evt);
            }
        });

        textFieldUrl_a.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                textFieldUrl_aActionPerformed(evt);
            }
        });

        textFieldUrl_b.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                textFieldUrl_bActionPerformed(evt);
            }
        });

        jScrollPane1.setViewportView(EditorPane_a);

        jScrollPane2.setViewportView(EditorPane_b);

        TextArea1.setColumns(20);
        TextArea1.setLineWrap(true);
        TextArea1.setRows(5);
        jScrollPane3.setViewportView(TextArea1);

        jLabel3.setText("Process");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel3)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(jScrollPane3, javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(jLabel1)
                                        .addGap(18, 18, 18)
                                        .addComponent(textFieldUrl_a, javax.swing.GroupLayout.PREFERRED_SIZE, 400, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(18, 18, 18)
                                        .addComponent(jLabel2))
                                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 473, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(20, 20, 20)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 476, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(textFieldUrl_b, javax.swing.GroupLayout.PREFERRED_SIZE, 476, javax.swing.GroupLayout.PREFERRED_SIZE))))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(loadButton)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel1)
                        .addComponent(jLabel2)
                        .addComponent(textFieldUrl_a, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(textFieldUrl_b, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(loadButton))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 297, Short.MAX_VALUE)
                    .addComponent(jScrollPane1))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel3)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 9, Short.MAX_VALUE)
                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 235, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>                        

    private void loadButtonActionPerformed(java.awt.event.ActionEvent evt) {                                           
        // TODO add your handling code here:
       Thread threadA; 
        threadA = new Thread(new Runnable(){
        @Override
        public void run(){  
            try
            {
                TextArea1.append("Thread A : Start \n");
                TextArea1.append("Thread A : Getpage url = "+textFieldUrl_a.getText()+"\n");
                EditorPane_a.setPage(textFieldUrl_a.getText());
                     
                //HTTP response header      
                try {
                    URL obj = new URL(textFieldUrl_a.getText());
                    URLConnection conn = obj.openConnection();
                    Map<String, List<String>> map = conn.getHeaderFields();
 
                    TextArea1.append("_____________________________\nThread A Response Header...\n");
 
                    for (Map.Entry<String, List<String>> entry : map.entrySet()) {
                        TextArea1.append("Thread A : " + entry.getKey() 
                           + " : " + entry.getValue()+"\n");
                    }
 
                TextArea1.append("Get Response Header By Thread A ...\n");
                String server = conn.getHeaderField("Server");
 
                if (server == null) {
                    TextArea1.append("Thread A 'Server' is not found!\n");
                } else {
		TextArea1.append("Server - " + server+"\n");
                }
 
                TextArea1.append("Done\n");
 
                } catch (Exception e) {
                    e.printStackTrace();
                }
                // end print header
                
                
                TextArea1.append("Thread A : Showed page \n");  
                TextArea1.append("Thread A : Finished \n");
           }
                catch(Exception e){
                    EditorPane_a.setText("Error: " +e);
                }
      } 
   });
        threadA.start(); 
        
        // Thread B
       Thread threadB; 
        threadB = new Thread(new Runnable(){
        @Override
        public void run(){
            try
            {
                TextArea1.append("Thread B : Start \n");
                TextArea1.append("Thread B : Getpage url = "+textFieldUrl_b.getText()+"\n");
                EditorPane_b.setPage(textFieldUrl_b.getText());
                     
                //HTTP response header      
                try {
                    URL obj = new URL(textFieldUrl_b.getText());
                    URLConnection conn = obj.openConnection();
                    Map<String, List<String>> map = conn.getHeaderFields();
 
                    TextArea1.append("_____________________________\nThread B : Response Header...\n");
 
                    for (Map.Entry<String, List<String>> entry : map.entrySet()) {
                        TextArea1.append("Thread B : " + entry.getKey() 
                           + " : " + entry.getValue()+"\n");
                    }
 
                TextArea1.append("Get Response Header By Thread B ...\n");
                String server = conn.getHeaderField("Server");
 
                if (server == null) {
                    TextArea1.append("Thread B 'Server' is not found!\n");
                } else {
		TextArea1.append("Server - " + server+"\n");
                }
 
                TextArea1.append("Done\n");
 
                } catch (Exception e) {
                    e.printStackTrace();
                }
                // end print header
                
                TextArea1.append("Thread B : Showed page \n");  
                TextArea1.append("Thread B : Finished \n");
           }
                catch(Exception e){
                    EditorPane_a.setText("Error: " +e);
                }
      } 
   });
        threadB.start(); 
        
    }                                          

    private void textFieldUrl_aActionPerformed(java.awt.event.ActionEvent evt) {                                               
        // TODO add your handling code here:
               
    }                                              

    private void textFieldUrl_bActionPerformed(java.awt.event.ActionEvent evt) {                                               
        // TODO add your handling code here:
    }                                              

    //get request headers
 
   
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(javawebbrowser2.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(javawebbrowser2.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(javawebbrowser2.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(javawebbrowser2.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        
        

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new javawebbrowser2().setVisible(true);
            }
        });

    }
    // Variables declaration - do not modify                     
    private javax.swing.JEditorPane EditorPane_a;
    private javax.swing.JEditorPane EditorPane_b;
    private javax.swing.JTextArea TextArea1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JButton loadButton;
    private javax.swing.JTextField textFieldUrl_a;
    private javax.swing.JTextField textFieldUrl_b;
    // End of variables declaration                   

}
